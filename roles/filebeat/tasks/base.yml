# 1.复制安装部署包到目标机器
- name: "step_1a copy the ansible local install archive package {{packages_home}}/{{package_filename}} to remote {{ansible_hostname}}@{{temp_path}}"
  copy:
    src:  "{{packages_home}}/{{package_filename}}"
    dest: "{{temp_path}}/"

# 2.准备安装环境
- name: "step_2a create the install path {{install_path}}"
  file:
    state: "directory"
    path: "{{install_path}}"
- name: "step_2b create the data path {{data_path}}"
  file:
    state: "directory"
    path: "{{data_path}}"
- name: "step_2c create the log path {{log_path}}"
  file:
    state: "directory"
    path: "{{log_path}}"

# 3.解压安装文件
- name: "step_3a unarchive the install package {{temp_path}}/{{package_filename}} to {{ install_path }}"
  unarchive:
    copy: no
    src: "{{temp_path}}/{{package_filename}}"
    dest: "{{ install_path }}"

# 4.准备配置文件
- name: "step_4a create the inputs.d config path"
  file:
    state: "directory"
    path: "{{install_path}}/{{unarchive_folder_name}}/inputs.d"
- name: "step_4b prepare the {{role}} config of {{install_path}}/{{unarchive_folder_name}}/filebeat.yml"
  template:
    backup: yes
    src: filebeat.yml.j2
    dest: "{{install_path}}/{{unarchive_folder_name}}/filebeat.yml"

# 5.启动服务
- name: "step_5a register the service filebeat to systemd"
  template:
    backup: yes
    mode: 0644
    src: "filebeat.service.j2"
    dest: "{{REMOTE_SYSTEMD_SERVICE_DIR}}/filebeat.service"
- name: "step_5b restart service telegraf"
  systemd:
    name: "filebeat"
    enabled: yes
    daemon_reload: yes
    state: restarted
