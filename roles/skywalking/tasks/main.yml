# 1.复制安装部署包到目标机器
- name: "step_1a copy the ansible local install archive package {{packages_home}}/{{package_filename}} to remote {{ansible_hostname}}@{{temp_path}}"
  copy:
    src:  "{{packages_home}}/{{package_filename}}"
    dest: "{{temp_path}}/"

# 2.准备安装环境
- name: "step_2a create the install path {{ install_path }}"
  file:
    state: "directory"
    path: "{{ install_path }}"
- name: "step_2b create the data path {{ data_path }}"
  file:
    state: "directory"
    path: "{{ data_path }}"
- name: "step_2c create the log path {{ log_path }}"
  file:
    state: "directory"
    path: "{{ log_path }}"

# 3.解压安装文件
- name: "step_3a unarchive the install package {{temp_path}}/{{package_filename}} to {{ install_path }}"
  unarchive:
    copy: no
    src: "{{temp_path}}/{{package_filename}}"
    dest: "{{ install_path }}"

# 4.准备配置文件
- name: "step_4a prepare the {{role}} server config of {{install_path}}/{{unarchive_folder_name}}/config/application.yml"
  template:
    backup: yes
    src: application.yml.j2
    dest: "{{install_path}}/{{unarchive_folder_name}}/config/application.yml"
- name: "step_4b prepare the {{role}} ui config of {{install_path}}/{{unarchive_folder_name}}/webapp/webapp.yml"
  template:
    backup: yes
    src: webapp.yml.j2
    dest: "{{install_path}}/{{unarchive_folder_name}}/webapp/webapp.yml"
- name: "step_4c prepare the {{role}} start config of {{install_path}}/{{unarchive_folder_name}}/bin/oapService.sh"
  template:
    backup: yes
    src: bin/oapService.sh.j2
    dest: "{{install_path}}/{{unarchive_folder_name}}/bin/oapService.sh"
- name: "step_4d prepare the {{role}} start config of {{install_path}}/{{unarchive_folder_name}}/bin/webappService.sh"
  template:
    backup: yes
    src:  bin/webappService.sh.j2
    dest: "{{install_path}}/{{unarchive_folder_name}}/bin/webappService.sh"

# 5.准备端口
- name: "step_5a permit the port {{opa_ui_port}},11800"
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  with_items:
    - "{{opa_ui_port}}/tcp"
    - "11800/tcp"
    - "12800/tcp"
  #notify: firewalld reload
- name: "step_5b firewalld reload"
  command: firewall-cmd --reload
  ignore_errors: yes

# 6.启动服务
- name: "step_6b register the service skywalking-server to systemd"
  template:
    backup: yes
    mode: 0644
    src: "skywalking-server.service.j2"
    dest: "{{REMOTE_SYSTEMD_SERVICE_DIR}}/skywalking-server.service"
- name: "step_6c restart service skywalking-server"
  systemd:
    name: "skywalking-server"
    enabled: yes
    daemon_reload: yes
    state: restarted
- name: "step_6d register the service skywalking-ui to systemd"
  template:
    backup: yes
    mode: 0644
    src: "skywalking-ui.service.j2"
    dest: "{{REMOTE_SYSTEMD_SERVICE_DIR}}/skywalking-ui.service"
# - name: "step_6e restart service skywalking-ui"
#   systemd:
#     name: "skywalking-ui"
#     enabled: yes
#     daemon_reload: yes
#     state: restarted

# 7.检查
# - name: "step7a check the {{role}} 11800 port is ok"
#   wait_for:
#     host: 0.0.0.0
#     port: 11800
#     delay: 10
#     timeout: 30
